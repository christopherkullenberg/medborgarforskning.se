# Generated by Django 2.2.16 on 2020-12-15 21:17

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='InterestArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interestArea', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('accepted_eula', models.BooleanField(default=False, editable=False)),
                ('accepted_eula_version', models.CharField(max_length=25, null=True)),
                ('accepted_eula_date', models.DateField(auto_now_add=True, null=True)),
                ('username', models.SlugField(unique=True)),
                ('slug', models.UUIDField(blank=True, default=uuid.uuid4, editable=False)),
                ('orcid', models.CharField(blank=True, max_length=50, null=True, verbose_name='ORCID')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Title')),
                ('bio_general', models.CharField(blank=True, max_length=500, null=True, verbose_name='Short Intro Biography')),
                ('bio_research_interest', models.CharField(blank=True, max_length=500, null=True, verbose_name='Short Outline of your Interests')),
                ('connections', models.CharField(blank=True, max_length=400, null=True, verbose_name='Describe the connections and/or collaboration you are seeking.')),
                ('personal_website_address', models.CharField(blank=True, max_length=200, null=True, verbose_name='Other personal website adress')),
                ('institution', models.CharField(blank=True, max_length=200, null=True, verbose_name='Institution')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
